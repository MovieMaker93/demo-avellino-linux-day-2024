name: Patch container images
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  workflow_dispatch:
jobs:
  patch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        # provide relevant list of images to scan on each run
        images:
          - "docker.io/library/alpine:3.18.4"
          - "docker.io/openpolicyagent/opa:0.46.0"
          - "docker.io/library/hello-world:latest"
    steps:
      - name: Set Tag
        id: set_tag
        run: |
          TAG=$(echo "${{ matrix.images }}" | grep -oP '(?<=:).*' | grep -oP '^[^/]+')
          IMMUNIZED_TAG="${TAG}"
          IMAGE_NAME=$(echo "${{ matrix.images }}" | sed -E 's|.*/([^:/]+/[^:/]+).*|\1|')
          echo "PATCHED_TAG=${IMMUNIZED_TAG}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
      - name: Generate Trivy Report
        uses: aquasecurity/trivy-action@0.21.0
        with:
          scan-type: "image"
          format: "json"
          output: "report.json"
          ignore-unfixed: true
          vuln-type: "os"
          image-ref: ${{ matrix.images }}
      - name: Check vulnerability count
        id: vuln_count
        run: |
          report_file="report.json"
          vuln_count=$(jq 'if .Results then [.Results[] | select(.Class=="os-pkgs" and .Vulnerabilities!=null) | .Vulnerabilities[]] | length else 0 end' "$report_file")
          echo "vuln_count=$vuln_count" >> $GITHUB_OUTPUT
      - name: Run Copa action
        if: steps.vuln_count.outputs.vuln_count != '0'
        id: copa
        uses: project-copacetic/copa-action@v1.2.1
        with:
          image: ${{ matrix.images }}
          image-report: "report.json"
          patched-tag: ${{ env.PATCHED_TAG }}
          output: openvex.json
      - name: Login to GHCR
        if: steps.copa.conclusion == 'success'
        id: login
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push patched image
        if: steps.login.conclusion == 'success'
        run: |
          # retag if needed
          docker tag ${{ steps.copa.outputs.patched-image }} ghcr.io/Moviemaker93/demo-avellino-linux-day-2024/${{ steps.copa.outputs.patched-image }}
          docker push ghcr.io/Moviemaker93/demo-avellino-linux-day-2024/${{ steps.copa.outputs.patched-image }}
